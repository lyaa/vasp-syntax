{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "vasp",
  "patterns": [
    {
      "include": "#strings"
    },
    {
      "include": "#comments"
    },
    {
      "include": "#kpoints"
    }
  ],
  "repository": {
    "strings": {
      "name": "string.quoted.double.vasp",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "constant.character.escape.vasp",
          "match": "\\\\."
        }
      ]
    },

    "comments": {
      "patterns": [
        {
          "begin": "#",
          "beginCaptures": {
            "0": { "name": "punctuation.definition.comment.vasp" }
          },
          "end": "\\n",
          "name": "comment.line.number-sign.vasp"
        },
        {
          "begin": "!",
          "beginCaptures": {
            "0": { "name": "punctuation.definition.comment.vasp" }
          },
          "end": "\\n",
          "name": "comment.line.character.vasp"
        }
      ]
    },
    "kpoints": {
      "patterns": [
        {
          "begin": "^\\s*((?i:(Auto|a|automatic|gamma|g|reciprocal|rec|r|Cartesian|cart|c|k|Monkhorst-pack|monk|mp|m))([^\\n\\;\\!\\#]*))([^\\n\\;]*)(\\n|\\;)",
          "captures": {
            "1": {
              "name": "entity.name.tag.kpoints.vasp"
            },
            "4": {
              "name": "comment.line.kpoints.vasp"
            }
          },
          "while": "^([ \\t]*((-?(?:\\d+\\*)?-?\\d+(?:\\.\\d*)?(?:(?:e|E)-?\\+?\\d+)?[ \\t]*){1,3}[ \\t]*(-?(?:\\d+\\*)?-?\\d+(?:\\.\\d*)?(?:(?:e|E)-?\\+?\\d+)?[ \\t]*)?)[ \\t]*([^\\n\\;]*))?\\n",
          "whileCaptures": {
            "2": {
              "name": "variable.parameter.real-list.kpoints.vasp"
            },
            "4": {
              "name": "constant.numeric.real-list.kpoints.vasp"
            },
            "5": {
              "name": "comment.line.real-list.kpoints.vasp"
            }
          }
        },
        {
          "match": "^\\s*\\b((?i:(line-mode|line|l))([^\\n\\;\\!\\#]*))([^\\n\\;]*)(\\n|\\;)",
          "captures": {
            "1": {
              "name": "entity.name.tag.kpoints.vasp"
            },
            "4": {
              "name": "comment.line.kpoints.vasp"
            }
          }
        },
        {
          "begin": "^\\s*\\b((?i:(Tetrahedra|tetrahedron|tetra|t))([^\\n\\;\\!\\#]*))([^\\n\\;]*)(\\n|\\;)",
          "captures": {
            "1": {
              "name": "entity.name.tag.kpoints.vasp"
            },
            "4": {
              "name": "comment.line.kpoints.vasp"
            }
          },
          "while": "^(\\s*((-?\\b(\\d+\\*)?-?\\d+(\\.\\d*)?((e|E)-?\\+?\\d+)?\\s*)+)\\b\\s*([^\\n\\;]*))?(\\n|\\;)",
          "whileCaptures": {
            "2": {
              "name": "variable.parameter.real-list.kpoints.vasp"
            },
            "8": {
              "name": "comment.line.real-list.kpoints.vasp"
            }
          }
        },
        {
          "match": "^\\s*(\\d+)(\\s*(\\!|\\#)[\\w ]*)?(\\n|\\;)",
          "captures": {
            "1": {
              "name": "variable.parameter.kpoints.vasp"
            },
            "2": {
              "name": "comment.line.kpoints.vasp"
            }
          }
        }
      ]
    }
  },
  "scopeName": "source.kpoints.vasp"
}
